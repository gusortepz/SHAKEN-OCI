{"ast":null,"code":"'use client';\n\nimport _objectWithoutProperties from \"/Users/clules48/Documents/tec/6toSemestre/reto/oci-react-samples/MtdrSpring/backend/src/main/frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _defineProperty from \"/Users/clules48/Documents/tec/6toSemestre/reto/oci-react-samples/MtdrSpring/backend/src/main/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _slicedToArray from \"/Users/clules48/Documents/tec/6toSemestre/reto/oci-react-samples/MtdrSpring/backend/src/main/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _toConsumableArray from \"/Users/clules48/Documents/tec/6toSemestre/reto/oci-react-samples/MtdrSpring/backend/src/main/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _objectSpread from \"/Users/clules48/Documents/tec/6toSemestre/reto/oci-react-samples/MtdrSpring/backend/src/main/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _excluded = [\"checkedIcon\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\", \"disableRipple\", \"className\", \"slots\", \"slotProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { alpha } from '@mui/system/colorManipulator';\nimport SwitchBase from \"../internal/SwitchBase.js\";\nimport CheckBoxOutlineBlankIcon from \"../internal/svg-icons/CheckBoxOutlineBlank.js\";\nimport CheckBoxIcon from \"../internal/svg-icons/CheckBox.js\";\nimport IndeterminateCheckBoxIcon from \"../internal/svg-icons/IndeterminateCheckBox.js\";\nimport capitalize from \"../utils/capitalize.js\";\nimport rootShouldForwardProp from \"../styles/rootShouldForwardProp.js\";\nimport checkboxClasses, { getCheckboxUtilityClass } from \"./checkboxClasses.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport createSimplePaletteValueFilter from \"../utils/createSimplePaletteValueFilter.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { mergeSlotProps } from \"../utils/index.js\";\nimport useSlot from \"../utils/useSlot.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar useUtilityClasses = function useUtilityClasses(ownerState) {\n  var classes = ownerState.classes,\n    indeterminate = ownerState.indeterminate,\n    color = ownerState.color,\n    size = ownerState.size;\n  var slots = {\n    root: ['root', indeterminate && 'indeterminate', \"color\".concat(capitalize(color)), \"size\".concat(capitalize(size))]\n  };\n  var composedClasses = composeClasses(slots, getCheckboxUtilityClass, classes);\n  return _objectSpread(_objectSpread({}, classes), composedClasses);\n};\nvar CheckboxRoot = styled(SwitchBase, {\n  shouldForwardProp: function shouldForwardProp(prop) {\n    return rootShouldForwardProp(prop) || prop === 'classes';\n  },\n  name: 'MuiCheckbox',\n  slot: 'Root',\n  overridesResolver: function overridesResolver(props, styles) {\n    var ownerState = props.ownerState;\n    return [styles.root, ownerState.indeterminate && styles.indeterminate, styles[\"size\".concat(capitalize(ownerState.size))], ownerState.color !== 'default' && styles[\"color\".concat(capitalize(ownerState.color))]];\n  }\n})(memoTheme(function (_ref) {\n  var theme = _ref.theme;\n  return {\n    color: (theme.vars || theme).palette.text.secondary,\n    variants: [{\n      props: {\n        color: 'default',\n        disableRipple: false\n      },\n      style: {\n        '&:hover': {\n          backgroundColor: theme.vars ? \"rgba(\".concat(theme.vars.palette.action.activeChannel, \" / \").concat(theme.vars.palette.action.hoverOpacity, \")\") : alpha(theme.palette.action.active, theme.palette.action.hoverOpacity)\n        }\n      }\n    }].concat(_toConsumableArray(Object.entries(theme.palette).filter(createSimplePaletteValueFilter()).map(function (_ref2) {\n      var _ref3 = _slicedToArray(_ref2, 1),\n        color = _ref3[0];\n      return {\n        props: {\n          color: color,\n          disableRipple: false\n        },\n        style: {\n          '&:hover': {\n            backgroundColor: theme.vars ? \"rgba(\".concat(theme.vars.palette[color].mainChannel, \" / \").concat(theme.vars.palette.action.hoverOpacity, \")\") : alpha(theme.palette[color].main, theme.palette.action.hoverOpacity)\n          }\n        }\n      };\n    })), _toConsumableArray(Object.entries(theme.palette).filter(createSimplePaletteValueFilter()).map(function (_ref4) {\n      var _ref5 = _slicedToArray(_ref4, 1),\n        color = _ref5[0];\n      return {\n        props: {\n          color: color\n        },\n        style: _defineProperty(_defineProperty({}, \"&.\".concat(checkboxClasses.checked, \", &.\").concat(checkboxClasses.indeterminate), {\n          color: (theme.vars || theme).palette[color].main\n        }), \"&.\".concat(checkboxClasses.disabled), {\n          color: (theme.vars || theme).palette.action.disabled\n        })\n      };\n    })), [{\n      // Should be last to override other colors\n      props: {\n        disableRipple: false\n      },\n      style: {\n        // Reset on touch devices, it doesn't add specificity\n        '&:hover': {\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      }\n    }])\n  };\n}));\nvar defaultCheckedIcon = /*#__PURE__*/_jsx(CheckBoxIcon, {});\nvar defaultIcon = /*#__PURE__*/_jsx(CheckBoxOutlineBlankIcon, {});\nvar defaultIndeterminateIcon = /*#__PURE__*/_jsx(IndeterminateCheckBoxIcon, {});\nvar Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(inProps, ref) {\n  var _slotProps$input, _icon$props$fontSize, _indeterminateIcon$pr;\n  var props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCheckbox'\n  });\n  var _props$checkedIcon = props.checkedIcon,\n    checkedIcon = _props$checkedIcon === void 0 ? defaultCheckedIcon : _props$checkedIcon,\n    _props$color = props.color,\n    color = _props$color === void 0 ? 'primary' : _props$color,\n    _props$icon = props.icon,\n    iconProp = _props$icon === void 0 ? defaultIcon : _props$icon,\n    _props$indeterminate = props.indeterminate,\n    indeterminate = _props$indeterminate === void 0 ? false : _props$indeterminate,\n    _props$indeterminateI = props.indeterminateIcon,\n    indeterminateIconProp = _props$indeterminateI === void 0 ? defaultIndeterminateIcon : _props$indeterminateI,\n    inputProps = props.inputProps,\n    _props$size = props.size,\n    size = _props$size === void 0 ? 'medium' : _props$size,\n    _props$disableRipple = props.disableRipple,\n    disableRipple = _props$disableRipple === void 0 ? false : _props$disableRipple,\n    className = props.className,\n    _props$slots = props.slots,\n    slots = _props$slots === void 0 ? {} : _props$slots,\n    _props$slotProps = props.slotProps,\n    slotProps = _props$slotProps === void 0 ? {} : _props$slotProps,\n    other = _objectWithoutProperties(props, _excluded);\n  var icon = indeterminate ? indeterminateIconProp : iconProp;\n  var indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n  var ownerState = _objectSpread(_objectSpread({}, props), {}, {\n    disableRipple: disableRipple,\n    color: color,\n    indeterminate: indeterminate,\n    size: size\n  });\n  var classes = useUtilityClasses(ownerState);\n  var externalInputProps = (_slotProps$input = slotProps.input) !== null && _slotProps$input !== void 0 ? _slotProps$input : inputProps;\n  var _useSlot = useSlot('root', {\n      ref: ref,\n      elementType: CheckboxRoot,\n      className: clsx(classes.root, className),\n      shouldForwardComponentProp: true,\n      externalForwardedProps: _objectSpread({\n        slots: slots,\n        slotProps: slotProps\n      }, other),\n      ownerState: ownerState,\n      additionalProps: {\n        type: 'checkbox',\n        icon: /*#__PURE__*/React.cloneElement(icon, {\n          fontSize: (_icon$props$fontSize = icon.props.fontSize) !== null && _icon$props$fontSize !== void 0 ? _icon$props$fontSize : size\n        }),\n        checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n          fontSize: (_indeterminateIcon$pr = indeterminateIcon.props.fontSize) !== null && _indeterminateIcon$pr !== void 0 ? _indeterminateIcon$pr : size\n        }),\n        disableRipple: disableRipple,\n        slots: slots,\n        slotProps: {\n          input: mergeSlotProps(typeof externalInputProps === 'function' ? externalInputProps(ownerState) : externalInputProps, {\n            'data-indeterminate': indeterminate\n          })\n        }\n      }\n    }),\n    _useSlot2 = _slicedToArray(_useSlot, 2),\n    RootSlot = _useSlot2[0],\n    rootSlotProps = _useSlot2[1];\n  return /*#__PURE__*/_jsx(RootSlot, _objectSpread(_objectSpread({}, rootSlotProps), {}, {\n    classes: classes\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The icon to display when the component is checked.\n   * @default <CheckBoxIcon />\n   */\n  checkedIcon: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the ripple effect is disabled.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n  /**\n   * The icon to display when the component is unchecked.\n   * @default <CheckBoxOutlineBlankIcon />\n   */\n  icon: PropTypes.node,\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the `input`.\n   * @default false\n   */\n  indeterminate: PropTypes.bool,\n  /**\n   * The icon to display when the component is indeterminate.\n   * @default <IndeterminateCheckBoxIcon />\n   */\n  indeterminateIcon: PropTypes.node,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   * @deprecated Use `slotProps.input` instead. This prop will be removed in v7. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * If `true`, the `input` element is required.\n   * @default false\n   */\n  required: PropTypes.bool,\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense checkbox styling.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    input: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    input: PropTypes.elementType,\n    root: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Checkbox;","map":{"version":3,"names":["_objectWithoutProperties","_defineProperty","_slicedToArray","_toConsumableArray","_objectSpread","_excluded","React","PropTypes","clsx","composeClasses","alpha","SwitchBase","CheckBoxOutlineBlankIcon","CheckBoxIcon","IndeterminateCheckBoxIcon","capitalize","rootShouldForwardProp","checkboxClasses","getCheckboxUtilityClass","styled","memoTheme","createSimplePaletteValueFilter","useDefaultProps","mergeSlotProps","useSlot","jsx","_jsx","useUtilityClasses","ownerState","classes","indeterminate","color","size","slots","root","concat","composedClasses","CheckboxRoot","shouldForwardProp","prop","name","slot","overridesResolver","props","styles","_ref","theme","vars","palette","text","secondary","variants","disableRipple","style","backgroundColor","action","activeChannel","hoverOpacity","active","Object","entries","filter","map","_ref2","_ref3","mainChannel","main","_ref4","_ref5","checked","disabled","defaultCheckedIcon","defaultIcon","defaultIndeterminateIcon","Checkbox","forwardRef","inProps","ref","_slotProps$input","_icon$props$fontSize","_indeterminateIcon$pr","_props$checkedIcon","checkedIcon","_props$color","_props$icon","icon","iconProp","_props$indeterminate","_props$indeterminateI","indeterminateIcon","indeterminateIconProp","inputProps","_props$size","_props$disableRipple","className","_props$slots","_props$slotProps","slotProps","other","externalInputProps","input","_useSlot","elementType","shouldForwardComponentProp","externalForwardedProps","additionalProps","type","cloneElement","fontSize","_useSlot2","RootSlot","rootSlotProps","process","env","NODE_ENV","propTypes","bool","node","object","string","oneOfType","oneOf","defaultChecked","id","onChange","func","required","shape","sx","arrayOf","value","any"],"sources":["/Users/clules48/Documents/tec/6toSemestre/reto/oci-react-samples/MtdrSpring/backend/src/main/frontend/node_modules/@mui/material/Checkbox/Checkbox.js"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { alpha } from '@mui/system/colorManipulator';\nimport SwitchBase from \"../internal/SwitchBase.js\";\nimport CheckBoxOutlineBlankIcon from \"../internal/svg-icons/CheckBoxOutlineBlank.js\";\nimport CheckBoxIcon from \"../internal/svg-icons/CheckBox.js\";\nimport IndeterminateCheckBoxIcon from \"../internal/svg-icons/IndeterminateCheckBox.js\";\nimport capitalize from \"../utils/capitalize.js\";\nimport rootShouldForwardProp from \"../styles/rootShouldForwardProp.js\";\nimport checkboxClasses, { getCheckboxUtilityClass } from \"./checkboxClasses.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport createSimplePaletteValueFilter from \"../utils/createSimplePaletteValueFilter.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { mergeSlotProps } from \"../utils/index.js\";\nimport useSlot from \"../utils/useSlot.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    indeterminate,\n    color,\n    size\n  } = ownerState;\n  const slots = {\n    root: ['root', indeterminate && 'indeterminate', `color${capitalize(color)}`, `size${capitalize(size)}`]\n  };\n  const composedClasses = composeClasses(slots, getCheckboxUtilityClass, classes);\n  return {\n    ...classes,\n    // forward the disabled and checked classes to the SwitchBase\n    ...composedClasses\n  };\n};\nconst CheckboxRoot = styled(SwitchBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiCheckbox',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.indeterminate && styles.indeterminate, styles[`size${capitalize(ownerState.size)}`], ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  color: (theme.vars || theme).palette.text.secondary,\n  variants: [{\n    props: {\n      color: 'default',\n      disableRipple: false\n    },\n    style: {\n      '&:hover': {\n        backgroundColor: theme.vars ? `rgba(${theme.vars.palette.action.activeChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette.action.active, theme.palette.action.hoverOpacity)\n      }\n    }\n  }, ...Object.entries(theme.palette).filter(createSimplePaletteValueFilter()).map(([color]) => ({\n    props: {\n      color,\n      disableRipple: false\n    },\n    style: {\n      '&:hover': {\n        backgroundColor: theme.vars ? `rgba(${theme.vars.palette[color].mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette[color].main, theme.palette.action.hoverOpacity)\n      }\n    }\n  })), ...Object.entries(theme.palette).filter(createSimplePaletteValueFilter()).map(([color]) => ({\n    props: {\n      color\n    },\n    style: {\n      [`&.${checkboxClasses.checked}, &.${checkboxClasses.indeterminate}`]: {\n        color: (theme.vars || theme).palette[color].main\n      },\n      [`&.${checkboxClasses.disabled}`]: {\n        color: (theme.vars || theme).palette.action.disabled\n      }\n    }\n  })), {\n    // Should be last to override other colors\n    props: {\n      disableRipple: false\n    },\n    style: {\n      // Reset on touch devices, it doesn't add specificity\n      '&:hover': {\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    }\n  }]\n})));\nconst defaultCheckedIcon = /*#__PURE__*/_jsx(CheckBoxIcon, {});\nconst defaultIcon = /*#__PURE__*/_jsx(CheckBoxOutlineBlankIcon, {});\nconst defaultIndeterminateIcon = /*#__PURE__*/_jsx(IndeterminateCheckBoxIcon, {});\nconst Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCheckbox'\n  });\n  const {\n    checkedIcon = defaultCheckedIcon,\n    color = 'primary',\n    icon: iconProp = defaultIcon,\n    indeterminate = false,\n    indeterminateIcon: indeterminateIconProp = defaultIndeterminateIcon,\n    inputProps,\n    size = 'medium',\n    disableRipple = false,\n    className,\n    slots = {},\n    slotProps = {},\n    ...other\n  } = props;\n  const icon = indeterminate ? indeterminateIconProp : iconProp;\n  const indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n  const ownerState = {\n    ...props,\n    disableRipple,\n    color,\n    indeterminate,\n    size\n  };\n  const classes = useUtilityClasses(ownerState);\n  const externalInputProps = slotProps.input ?? inputProps;\n  const [RootSlot, rootSlotProps] = useSlot('root', {\n    ref,\n    elementType: CheckboxRoot,\n    className: clsx(classes.root, className),\n    shouldForwardComponentProp: true,\n    externalForwardedProps: {\n      slots,\n      slotProps,\n      ...other\n    },\n    ownerState,\n    additionalProps: {\n      type: 'checkbox',\n      icon: /*#__PURE__*/React.cloneElement(icon, {\n        fontSize: icon.props.fontSize ?? size\n      }),\n      checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n        fontSize: indeterminateIcon.props.fontSize ?? size\n      }),\n      disableRipple,\n      slots,\n      slotProps: {\n        input: mergeSlotProps(typeof externalInputProps === 'function' ? externalInputProps(ownerState) : externalInputProps, {\n          'data-indeterminate': indeterminate\n        })\n      }\n    }\n  });\n  return /*#__PURE__*/_jsx(RootSlot, {\n    ...rootSlotProps,\n    classes: classes\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The icon to display when the component is checked.\n   * @default <CheckBoxIcon />\n   */\n  checkedIcon: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the ripple effect is disabled.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n  /**\n   * The icon to display when the component is unchecked.\n   * @default <CheckBoxOutlineBlankIcon />\n   */\n  icon: PropTypes.node,\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the `input`.\n   * @default false\n   */\n  indeterminate: PropTypes.bool,\n  /**\n   * The icon to display when the component is indeterminate.\n   * @default <IndeterminateCheckBoxIcon />\n   */\n  indeterminateIcon: PropTypes.node,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   * @deprecated Use `slotProps.input` instead. This prop will be removed in v7. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * If `true`, the `input` element is required.\n   * @default false\n   */\n  required: PropTypes.bool,\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense checkbox styling.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    input: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    input: PropTypes.elementType,\n    root: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Checkbox;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}